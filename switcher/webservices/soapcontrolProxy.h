/* soapcontrolProxy.h
   Generated by gSOAP 2.8.4 from ./ctrl-webservice-definition.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapcontrolProxy_H
#define soapcontrolProxy_H
#include "soapH.h"

class SOAP_CMAC controlProxy : public soap
{ public:
	/// Endpoint URL of service 'controlProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	controlProxy();
	/// Constructor with copy of another engine state
	controlProxy(const struct soap&);
	/// Constructor with endpoint URL
	controlProxy(const char *url);
	/// Constructor with engine input+output mode control
	controlProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	controlProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	controlProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~controlProxy();
	/// Initializer used by constructors
	virtual	void controlProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'add' (returns error code or SOAP_OK)
	virtual	int add(double a, double b, double *result) { return add(NULL, NULL, a, b, result); }
	virtual	int add(const char *endpoint, const char *soap_action, double a, double b, double *result);

	/// Web service operation 'sub' (returns error code or SOAP_OK)
	virtual	int sub(double a, double b, double *result) { return sub(NULL, NULL, a, b, result); }
	virtual	int sub(const char *endpoint, const char *soap_action, double a, double b, double *result);

	/// Web service operation 'mul' (returns error code or SOAP_OK)
	virtual	int mul(double a, double b, double *result) { return mul(NULL, NULL, a, b, result); }
	virtual	int mul(const char *endpoint, const char *soap_action, double a, double b, double *result);

	/// Web service operation 'div' (returns error code or SOAP_OK)
	virtual	int div(double a, double b, double *result) { return div(NULL, NULL, a, b, result); }
	virtual	int div(const char *endpoint, const char *soap_action, double a, double b, double *result);

	/// Web service operation 'pow' (returns error code or SOAP_OK)
	virtual	int pow(double a, double b, double *result) { return pow(NULL, NULL, a, b, result); }
	virtual	int pow(const char *endpoint, const char *soap_action, double a, double b, double *result);

	/// Web service operation 'get-factory-capabilities' (returns error code or SOAP_OK)
	virtual	int get_factory_capabilities(std::vector<std::string >*result) { return get_factory_capabilities(NULL, NULL, result); }
	virtual	int get_factory_capabilities(const char *endpoint, const char *soap_action, std::vector<std::string >*result);

	/// Web service operation 'get-classes-doc' (returns error code or SOAP_OK)
	virtual	int get_classes_doc(std::string *result) { return get_classes_doc(NULL, NULL, result); }
	virtual	int get_classes_doc(const char *endpoint, const char *soap_action, std::string *result);

	/// Web service operation 'get-quiddity-description' (returns error code or SOAP_OK)
	virtual	int get_quiddity_description(std::string quiddity_name, std::string *result) { return get_quiddity_description(NULL, NULL, quiddity_name, result); }
	virtual	int get_quiddity_description(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string *result);

	/// Web service operation 'get-quiddities-description' (returns error code or SOAP_OK)
	virtual	int get_quiddities_description(std::string *result) { return get_quiddities_description(NULL, NULL, result); }
	virtual	int get_quiddities_description(const char *endpoint, const char *soap_action, std::string *result);

	/// Web service operation 'get-class-doc' (returns error code or SOAP_OK)
	virtual	int get_class_doc(std::string class_name, std::string *result) { return get_class_doc(NULL, NULL, class_name, result); }
	virtual	int get_class_doc(const char *endpoint, const char *soap_action, std::string class_name, std::string *result);

	/// Web service operation 'get-quiddity-names' (returns error code or SOAP_OK)
	virtual	int get_quiddity_names(std::vector<std::string >*result) { return get_quiddity_names(NULL, NULL, result); }
	virtual	int get_quiddity_names(const char *endpoint, const char *soap_action, std::vector<std::string >*result);

	/// Web service operation 'get-properties-description' (returns error code or SOAP_OK)
	virtual	int get_properties_description(std::string quiddity_name, std::string *result) { return get_properties_description(NULL, NULL, quiddity_name, result); }
	virtual	int get_properties_description(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string *result);

	/// Web service operation 'get-property-description' (returns error code or SOAP_OK)
	virtual	int get_property_description(std::string quiddity_name, std::string property_name, std::string *result) { return get_property_description(NULL, NULL, quiddity_name, property_name, result); }
	virtual	int get_property_description(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string property_name, std::string *result);

	/// Web service operation 'get-properties-description-by-class' (returns error code or SOAP_OK)
	virtual	int get_properties_description_by_class(std::string class_name, std::string *result) { return get_properties_description_by_class(NULL, NULL, class_name, result); }
	virtual	int get_properties_description_by_class(const char *endpoint, const char *soap_action, std::string class_name, std::string *result);

	/// Web service operation 'get-property-description-by-class' (returns error code or SOAP_OK)
	virtual	int get_property_description_by_class(std::string class_name, std::string property_name, std::string *result) { return get_property_description_by_class(NULL, NULL, class_name, property_name, result); }
	virtual	int get_property_description_by_class(const char *endpoint, const char *soap_action, std::string class_name, std::string property_name, std::string *result);

	/// Web service one-way send operation 'send_set-property' (returns error code or SOAP_OK)
	virtual	int send_set_property(std::string quiddity_name, std::string property_name, std::string property_value) { return send_set_property(NULL, NULL, quiddity_name, property_name, property_value); }
	virtual	int send_set_property(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string property_name, std::string property_value);
	/// Web service one-way receive operation 'recv_set-property' (returns error code or SOAP_OK);
	virtual	int recv_set_property(struct switcher__set_property&);
	/// Web service receive of HTTP Accept acknowledgment for one-way send operation 'send_set-property' (returns error code or SOAP_OK)
	virtual	int recv_set_property_empty_response() { return soap_recv_empty_response(this); }
	/// Web service one-way synchronous send operation 'set-property' with HTTP Accept/OK response receive (returns error code or SOAP_OK)
	virtual	int set_property(std::string quiddity_name, std::string property_name, std::string property_value) { return set_property(NULL, NULL, quiddity_name, property_name, property_value); }
	virtual	int set_property(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string property_name, std::string property_value) { if (send_set_property(endpoint, soap_action, quiddity_name, property_name, property_value) || soap_recv_empty_response(this)) return this->error; return SOAP_OK; }

	/// Web service operation 'get-property' (returns error code or SOAP_OK)
	virtual	int get_property(std::string quiddity_name, std::string property_name, std::string *result) { return get_property(NULL, NULL, quiddity_name, property_name, result); }
	virtual	int get_property(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string property_name, std::string *result);

	/// Web service operation 'create-quiddity' (returns error code or SOAP_OK)
	virtual	int create_quiddity(std::string quiddity_class, std::string *result) { return create_quiddity(NULL, NULL, quiddity_class, result); }
	virtual	int create_quiddity(const char *endpoint, const char *soap_action, std::string quiddity_class, std::string *result);

	/// Web service operation 'create-named-quiddity' (returns error code or SOAP_OK)
	virtual	int create_named_quiddity(std::string quiddity_class, std::string nick_name, std::string *result) { return create_named_quiddity(NULL, NULL, quiddity_class, nick_name, result); }
	virtual	int create_named_quiddity(const char *endpoint, const char *soap_action, std::string quiddity_class, std::string nick_name, std::string *result);

	/// Web service one-way send operation 'send_delete-quiddity' (returns error code or SOAP_OK)
	virtual	int send_delete_quiddity(std::string quiddity_name) { return send_delete_quiddity(NULL, NULL, quiddity_name); }
	virtual	int send_delete_quiddity(const char *endpoint, const char *soap_action, std::string quiddity_name);
	/// Web service one-way receive operation 'recv_delete-quiddity' (returns error code or SOAP_OK);
	virtual	int recv_delete_quiddity(struct switcher__delete_quiddity&);
	/// Web service receive of HTTP Accept acknowledgment for one-way send operation 'send_delete-quiddity' (returns error code or SOAP_OK)
	virtual	int recv_delete_quiddity_empty_response() { return soap_recv_empty_response(this); }
	/// Web service one-way synchronous send operation 'delete-quiddity' with HTTP Accept/OK response receive (returns error code or SOAP_OK)
	virtual	int delete_quiddity(std::string quiddity_name) { return delete_quiddity(NULL, NULL, quiddity_name); }
	virtual	int delete_quiddity(const char *endpoint, const char *soap_action, std::string quiddity_name) { if (send_delete_quiddity(endpoint, soap_action, quiddity_name) || soap_recv_empty_response(this)) return this->error; return SOAP_OK; }

	/// Web service operation 'get-methods-description' (returns error code or SOAP_OK)
	virtual	int get_methods_description(std::string quiddity_name, std::string *result) { return get_methods_description(NULL, NULL, quiddity_name, result); }
	virtual	int get_methods_description(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string *result);

	/// Web service operation 'get-method-description' (returns error code or SOAP_OK)
	virtual	int get_method_description(std::string quiddity_name, std::string method_name, std::string *result) { return get_method_description(NULL, NULL, quiddity_name, method_name, result); }
	virtual	int get_method_description(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string method_name, std::string *result);

	/// Web service operation 'get-methods-description-by-class' (returns error code or SOAP_OK)
	virtual	int get_methods_description_by_class(std::string class_name, std::string *result) { return get_methods_description_by_class(NULL, NULL, class_name, result); }
	virtual	int get_methods_description_by_class(const char *endpoint, const char *soap_action, std::string class_name, std::string *result);

	/// Web service operation 'get-method-description-by-class' (returns error code or SOAP_OK)
	virtual	int get_method_description_by_class(std::string class_name, std::string method_name, std::string *result) { return get_method_description_by_class(NULL, NULL, class_name, method_name, result); }
	virtual	int get_method_description_by_class(const char *endpoint, const char *soap_action, std::string class_name, std::string method_name, std::string *result);

	/// Web service operation 'invoke-method' (returns error code or SOAP_OK)
	virtual	int invoke_method(std::string quiddity_name, std::string method_name, std::vector<std::string >args, bool *result) { return invoke_method(NULL, NULL, quiddity_name, method_name, args, result); }
	virtual	int invoke_method(const char *endpoint, const char *soap_action, std::string quiddity_name, std::string method_name, std::vector<std::string >args, bool *result);
};
#endif
